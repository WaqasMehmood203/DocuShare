@model IEnumerable<DMS.Backend.Models.Entities.Document>
@using DMS.Backend.Models
@using DMS.Backend.Models.Entities
@using static DMS.Backend.Models.Enums

@{
    ViewData["Title"] = "Home - DOCUSHARE";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-4">Document Feed</h2>
    <a asp-controller="Home" asp-action="Logout" class="btn btn-outline-secondary mb-3">Logout</a>
    <a asp-controller="Document" asp-action="Create" class="btn btn-primary mb-3">Upload New Document</a>

    <!-- Search, Filter, and Sort Form -->
    <form asp-action="Index" method="get" class="mb-4">
        <div class="row align-items-end">
            <div class="col-md-3 mb-3">
                <label class="form-label">Search by Title</label>
                <input type="text" name="searchString" value="@ViewBag.SearchString" class="form-control" placeholder="Search by title..." />
            </div>
            <div class="col-md-3 mb-3">
                <label class="form-label">Filter by Visibility</label>
                <select name="visibilityFilter" class="form-control">
                    <option value="">All Visibilities</option>
                    @foreach (var visibility in Enum.GetValues(typeof(Enums.DocumentVisibility)))
                    {
                        <option value="@visibility" selected="@(ViewBag.VisibilityFilter == visibility.ToString() ? "selected" : null)">@visibility</option>
                    }
                </select>
            </div>
            <div class="col-md-3 mb-3">
                <label class="form-label">Sort By</label>
                <div class="d-flex align-items-center">
                    <select name="sortBy" class="form-control me-3">
                        <option value="title" selected="@(ViewBag.SortBy == "title" ? "selected" : null)">Title</option>
                        <option value="owner" selected="@(ViewBag.SortBy == "owner" ? "selected" : null)">Owner</option>
                        <option value="visibility" selected="@(ViewBag.SortBy == "visibility" ? "selected" : null)">Visibility</option>
                        <option value="createddate" selected="@(ViewBag.SortBy == "createddate" ? "selected" : null)">Created Date</option>
                    </select>
                    <button type="submit" name="sortOrder" value="asc" class="btn btn-outline-primary me-2 @(ViewBag.SortOrder == "asc" ? "active" : "")" title="Sort Ascending">↑</button>
                    <button type="submit" name="sortOrder" value="desc" class="btn btn-outline-primary @(ViewBag.SortOrder == "desc" ? "active" : "")" title="Sort Descending">↓</button>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <button type="submit" class="btn btn-primary me-2">Apply</button>
                <a asp-action="Index" class="btn btn-secondary">Clear</a>
            </div>
        </div>
        <input type="hidden" name="page" value="@ViewBag.CurrentPage" />
    </form>

    <!-- Error Message -->
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            <strong>Error:</strong> @ViewBag.ErrorMessage
        </div>
    }

    <!-- Document Table -->
    @if (!Model.Any())
    {
        <p>No documents to display. Upload a document or connect with friends!</p>
    }
    else
    {
        <table class="table table-bordered table-striped">
            <thead class="table-light">
                <tr>
                    <th>Title</th>
                    <th>Owner</th>
                    <th>Visibility</th>
                    <th>Created Date</th>
                    <th style="width: 220px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var doc in Model)
                {
                    <tr>
                        <td>@doc.Title</td>
                        <td>@doc.Owner?.FirstName @doc.Owner?.LastName</td>
                        <td>@doc.Visibility</td>
                        <td>@doc.CreatedDate.ToString("MMM dd, yyyy")</td>
                        <td>
                            <a href="@Url.Action("ViewDocument", "Document", new { id = doc.Id })" class="btn btn-sm btn-info">View</a>
                            @{
                                var userIdStr = Context.Session.GetString("UserId");
                                if (!string.IsNullOrEmpty(userIdStr) && Guid.TryParse(userIdStr, out var userId) && doc.OwnerId == userId)
                                {
                                    <a asp-controller="Document" asp-action="Edit" asp-route-id="@doc.Id" class="btn btn-sm btn-outline-warning mx-1">Edit</a>
                                    <form asp-controller="Document" asp-action="Delete" asp-route-id="@doc.Id" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this document?');">
                                        <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                    </form>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)" asp-route-searchString="@ViewBag.SearchString" asp-route-visibilityFilter="@ViewBag.VisibilityFilter" asp-route-sortBy="@ViewBag.SortBy" asp-route-sortOrder="@ViewBag.SortOrder">Previous</a>
                </li>
                @for (var i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-searchString="@ViewBag.SearchString" asp-route-visibilityFilter="@ViewBag.VisibilityFilter" asp-route-sortBy="@ViewBag.SortBy" asp-route-sortOrder="@ViewBag.SortOrder">@i</a>
                    </li>
                }
                <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)" asp-route-searchString="@ViewBag.SearchString" asp-route-visibilityFilter="@ViewBag.VisibilityFilter" asp-route-sortBy="@ViewBag.SortBy" asp-route-sortOrder="@ViewBag.SortOrder">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}