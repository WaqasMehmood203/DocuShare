@*  @model IEnumerable<DMS.Backend.Models.Entities.Document>

@{
    ViewData["Title"] = "Home - DOCUSHARE";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-4">Document Feed</h2>

    @if (!Model.Any())
    {
        <p>No documents to display. Upload a document or connect with friends!</p>
    }
    else
    {
        <table class="table table-bordered table-striped">
            <thead class="table-light">
                <tr>
                    <th>Title</th>
                    <th>Owner</th>
                    <th>Visibility</th>
                    <th>Created Date</th>
                    <th style="width: 220px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var doc in Model)
                {
                    <tr>
                        <td>@doc.Title</td>
                        <td>@doc.Owner.FirstName @doc.Owner.LastName</td>
                        <td>@doc.Visibility</td>
                        <td>@doc.CreatedDate.ToString("MMM dd, yyyy")</td>
                        <td>
                            <a href="@Url.Action("ViewDocument", "Document", new { id = doc.Id })" class="btn btn-sm btn-info">View</a>
                            @{
                                var userIdStr = Context.Session.GetString("UserId");
                                if (!string.IsNullOrEmpty(userIdStr) && Guid.TryParse(userIdStr, out var userId) && doc.OwnerId == userId)
                                {
                                    <a asp-controller="Document" asp-action="Edit" asp-route-id="@doc.Id" class="btn btn-sm btn-outline-warning mx-1">Edit</a>
                                    <form asp-controller="Document" asp-action="Delete" asp-route-id="@doc.Id" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this document?');">
                                        <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                    </form>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@section Scripts {
    <script>
        function toggleView(id) {
            const row = document.getElementById('viewSection-' + id);
            const isVisible = row?.style.display !== 'none';

            // Hide all other expanded rows
            document.querySelectorAll('tr[id^="viewSection-"]').forEach(r => r.style.display = 'none');

            // Toggle current row
            if (row) {
                row.style.display = isVisible ? 'none' : '';
            }
        }
    </script>
} *@
@* @model DMS.Backend.API.Models.Entities.PagedResult<DMS.Backend.Models.Entities.Document *@
    @model DMS.Backend.Models.Entities.PagedResult<DMS.Backend.Models.Entities.Document>
@using DMS.Backend.Models.Entities
@using static DMS.Backend.Models.Enums

@{
    ViewData["Title"] = "Home - Your and Shared Documents";
    var parameters = ViewData["QueryParameters"] as DMS.Backend.Models.Entities.QueryParameters;
}

<div class="container mt-4">
    <h2>Home - Your and Shared Documents</h2>
    <a asp-controller="Home" asp-action="Logout" class="btn btn-outline-secondary mb-3">Logout</a>

    <!-- Search, Filter, and Sort Form -->
    <form asp-action="Index" method="get" class="mb-4">
        <div class="row">
            <!-- Search -->
            <div class="col-md-4">
                <div class="form-group">
                    <label for="SearchString">Search</label>
                    <input type="text" name="SearchString" class="form-control" value="@parameters.SearchString" placeholder="Search by title or content" />
                </div>
            </div>
            <!-- Visibility Filter -->
            <div class="col-md-3">
                <div class="form-group">
                    <label for="Visibility">Visibility</label>
                    <select name="Visibility" class="form-control">
                        <option value="">All</option>
                        <option value="Public" selected="@(parameters.Visibility == "Public")">Public</option>
                        <option value="Private" selected="@(parameters.Visibility == "Private")">Private</option>
                        <option value="Friends" selected="@(parameters.Visibility == "Friends")">Friends</option>
                    </select>
                </div>
            </div>
            <!-- Tags Filter -->
            <div class="col-md-3">
                <div class="form-group">
                    <label for="Tags">Tags</label>
                    <input type="text" name="Tags" class="form-control" value="@parameters.Tags" placeholder="e.g., tag1, tag2" />
                </div>
            </div>
            <!-- Sort -->
            <div class="col-md-2">
                <div class="form-group">
                    <label for="SortBy">Sort By</label>
                    <select name="SortBy" class="form-control">
                        <option value="CreatedDate" selected="@(parameters.SortBy == "CreatedDate")">Created Date</option>
                        <option value="Title" selected="@(parameters.SortBy == "Title")">Title</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="SortOrder">Order</label>
                    <select name="SortOrder" class="form-control">
                        <option value="desc" selected="@(parameters.SortOrder == "desc")">Descending</option>
                        <option value="asc" selected="@(parameters.SortOrder == "asc")">Ascending</option>
                    </select>
                </div>
            </div>
            <!-- Submit -->
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary">Apply</button>
            </div>
        </div>
        <!-- Hidden fields for pagination -->
        <input type="hidden" name="PageNumber" value="1" />
        <input type="hidden" name="PageSize" value="@parameters.PageSize" />
    </form>

    <!-- Document Table -->
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Title</th>
                <th>Uploaded By</th>
                <th>Visibility</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Items == null || !Model.Items.Any())
            {
                <tr>
                    <td colspan="4">No documents found.</td>
                </tr>
            }
            else
            {
                @foreach (var doc in Model.Items)
                {
                    <tr>
                        <td>@doc.Title</td>
                        <td>@doc.Owner.FirstName @doc.Owner.LastName</td>
                        <td>@doc.Visibility</td>
                        <td>
                            <a class="btn btn-primary btn-sm" href="@Url.Action("Download", "Document", new { id = doc.Id })">Download</a>
                            <a class="btn btn-outline-primary btn-sm" asp-controller="Document" asp-action="ViewDocument" asp-route-id="@doc.Id">View</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <!-- Pagination Controls -->
    @if (Model.Items != null && Model.Items.Any())
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <!-- Previous -->
                <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-PageNumber="@(Model.PageNumber - 1)" asp-route-PageSize="@Model.PageSize" asp-route-SearchString="@parameters.SearchString" asp-route-Visibility="@parameters.Visibility" asp-route-Tags="@parameters.Tags" asp-route-SortBy="@parameters.SortBy" asp-route-SortOrder="@parameters.SortOrder">Previous</a>
                </li>
                <!-- Page Numbers -->
                @for (var i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-PageNumber="@i" asp-route-PageSize="@Model.PageSize" asp-route-SearchString="@parameters.SearchString" asp-route-Visibility="@parameters.Visibility" asp-route-Tags="@parameters.Tags" asp-route-SortBy="@parameters.SortBy" asp-route-SortOrder="@parameters.SortOrder">@i</a>
                    </li>
                }
                <!-- Next -->
                <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-PageNumber="@(Model.PageNumber + 1)" asp-route-PageSize="@Model.PageSize" asp-route-SearchString="@parameters.SearchString" asp-route-Visibility="@parameters.Visibility" asp-route-Tags="@parameters.Tags" asp-route-SortBy="@parameters.SortBy" asp-route-SortOrder="@parameters.SortOrder">Next</a>
                </li>
            </ul>
        </nav>
        <p>Showing @(Model.Items.Count) of @Model.TotalCount documents (Page @Model.PageNumber of @Model.TotalPages)</p>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}